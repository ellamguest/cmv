#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Fri Mar  3 12:04:53 2017

@author: emg
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt 
import scipy as sp
import datetime

### CONVERT MOD LIST TO DAY X MOD MATRIX
df1 = pd.read_csv('/Users/emg/Programmming/GitHub/cmv/tidy_data/dated_mod_df.csv')

def get_datetime(string):
    string = ''.join(ch for ch in str(string) if ch.isalnum())
    date = datetime.datetime.strptime(string,'%Y%m%d%H%M%S')
    return date

df1.pubdate = df1.pubdate.apply(get_datetime)
df1['date'] = pd.to_datetime(df1['date'])

subset1 = (df1[['name', 'date', 'pubdate']].copy()
            .assign(
                date=lambda df: df['date'].pipe(pd.to_datetime).dt.normalize(),
                pubdate=lambda df: df['pubdate'].pipe(pd.to_datetime).dt.normalize()))

subset1 = subset1.sort_values(['name','date'])

#### this section not translating to this data
appeared = (subset1
                .groupby(['date', 'name']).first()['pubdate']
                .unstack()
                .isnull()
                .pipe(lambda x: ~x)
                .resample('D').mean()
                .fillna(0)
                .astype(int))


last_seen = (subset1
                .groupby(['pubdate', 'name']).last()['date']
                .unstack()
                .isnull()
                .resample('D').pad()
                .astype(int))
    

output = {}
current = pd.Series(False, seen.columns)    
for d in seen.index & not_seen.index:
    joined, left = seen.loc[d], not_seen.loc[d]
    current[joined] = True
    current[left] = False
    output[d] = current.copy()
output = pd.concat(output, 1).T

output.to_csv('/Users/emg/Programmming/GitHub/cmv/tidy_data/day_mod_matrix.csv')

### GRAPH TIMELINE
output = pd.read_csv('/Users/emg/Programmming/GitHub/cmv/tidy_data/day_mod_matrix.csv', index_col=0)
output.index = pd.to_datetime(output.index)

weeks = output.resample('W').last()
s = weeks.sum()
s = s[s>0]
weeks = weeks[s.index]

  
cg = sns.clustermap(weeks.T, row_cluster=True)
#plt.yticks(rotation=0)
plt.gcf().set_size_inches(12, 24)

